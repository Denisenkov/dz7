// dz3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include "hht.h"

    using namespace std;
    int Goods::percent = 15;
    int main()
    {    
       /*

        Goods l;
        l.cing();
        l.coutg();
        */
        /*
        krug k;
        k.cink();
        cout <<"\ndlinna okrujnosti "<< k.lokr();
        cout << "\nS kruga " << k.skrug();
        cout << "\nd kruga " << k.dkrug();*/
        
       

        //////////////////////////////////////////////////////////////
        /*тест вычислителя определителей
        double** b = new double* [3];
        int* c = new int[4];
        for (int i = 0; i < 3; i++) {
            b[i] = new double[4];
        }
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 4; j++) {
                b[i][j] = 1;c[j] = -1;
            }

        }
       b[0][0] = 2;
        b[1][1] = 2;
        b[2][2] = 2;
        c[0] = 0;
      cout<<opred(0, 4, c, b);
      for (int i = 0; i < 3; i++) {
          delete [] b[i];
      }
      delete [] c;*/
      /////////////////////////////////////////////////////////////////
       /*вектор 
        vkr p('a'),g(3);
        
        cout <<"\nmodyl p = "<< p.modv()<<"\n";
      
        cout << "\navtozapolnenie vektorov\n";

        p.invrd(3);
        p.coutv();
        g.invrd(3);
        g.coutv();
        cout <<  "\nsumma vek = \n";
        p.sumv(g).coutv();
        cout << "\n vek * chislo = \n";
        p.umnv(-1).coutv();
        cout << "\nskalir * vek = \n";
        cout << p.skal(g) << "\n";
       */
       /*векторное произведение
        vkr p('a'), g('a'),f(3);
       
        vkr* l = new vkr[2];
        l[0] = p;
        l[1] = g;
        cout << "\nvek * = \n";
        f.vekp(3, l).coutv();
        */
        

      
     
     /////////////////////////////////////////////////////
     /*
        int o = 6;
        vkr* t = new vkr[o];
        vkr f(3);
        cout << "\navtozapolnenie vektorov\n";
        for (int i = 0; i < o-1; i++) {
            
           t[i].invrd(o);
           t[i].coutv();
        }
        cout << "\nvek * = \n";
        f.vekp(o, t).coutv();

       
        delete[] t;
      */
     /*комплексное число
        comp a;
        cin >> a;
        cout << a << "\n";
        comp b(1, 0);

        cout << "a+b = " << a + b << "\n";
        cout << "a*b = " << a * b << "\n";
        cout << "a/b-b = " << a / b - b << "\n";
     */
    }


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
